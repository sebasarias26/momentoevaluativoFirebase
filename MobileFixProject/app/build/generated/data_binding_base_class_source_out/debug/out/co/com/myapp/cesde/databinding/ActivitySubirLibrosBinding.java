// Generated by view binder compiler. Do not edit!
package co.com.myapp.cesde.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import co.com.myapp.cesde.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySubirLibrosBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAtras;

  @NonNull
  public final Button btnSubir;

  @NonNull
  public final EditText edAutorLibro;

  @NonNull
  public final EditText edDescripcion;

  @NonNull
  public final EditText edIdLibro;

  @NonNull
  public final EditText edNombreLibro;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView textView2;

  private ActivitySubirLibrosBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAtras,
      @NonNull Button btnSubir, @NonNull EditText edAutorLibro, @NonNull EditText edDescripcion,
      @NonNull EditText edIdLibro, @NonNull EditText edNombreLibro, @NonNull ConstraintLayout main,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.btnAtras = btnAtras;
    this.btnSubir = btnSubir;
    this.edAutorLibro = edAutorLibro;
    this.edDescripcion = edDescripcion;
    this.edIdLibro = edIdLibro;
    this.edNombreLibro = edNombreLibro;
    this.main = main;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySubirLibrosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySubirLibrosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_subir_libros, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySubirLibrosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAtras;
      Button btnAtras = ViewBindings.findChildViewById(rootView, id);
      if (btnAtras == null) {
        break missingId;
      }

      id = R.id.btnSubir;
      Button btnSubir = ViewBindings.findChildViewById(rootView, id);
      if (btnSubir == null) {
        break missingId;
      }

      id = R.id.edAutorLibro;
      EditText edAutorLibro = ViewBindings.findChildViewById(rootView, id);
      if (edAutorLibro == null) {
        break missingId;
      }

      id = R.id.edDescripcion;
      EditText edDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (edDescripcion == null) {
        break missingId;
      }

      id = R.id.edIdLibro;
      EditText edIdLibro = ViewBindings.findChildViewById(rootView, id);
      if (edIdLibro == null) {
        break missingId;
      }

      id = R.id.edNombreLibro;
      EditText edNombreLibro = ViewBindings.findChildViewById(rootView, id);
      if (edNombreLibro == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivitySubirLibrosBinding((ConstraintLayout) rootView, btnAtras, btnSubir,
          edAutorLibro, edDescripcion, edIdLibro, edNombreLibro, main, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
