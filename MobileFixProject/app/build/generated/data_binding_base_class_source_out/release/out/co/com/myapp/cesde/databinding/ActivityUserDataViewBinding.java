// Generated by view binder compiler. Do not edit!
package co.com.myapp.cesde.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import co.com.myapp.cesde.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserDataViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBuscarUsuario;

  @NonNull
  public final Button btnVolverDash1;

  @NonNull
  public final EditText inputIdBuscar;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView mostrarApellido;

  @NonNull
  public final TextView mostrarContrasena;

  @NonNull
  public final TextView mostrarCorreo;

  @NonNull
  public final TextView mostrarIdUsuario;

  @NonNull
  public final TextView mostrarNombreUsuario;

  @NonNull
  public final TextView mostrarTelefono;

  @NonNull
  public final TextView tagDatosUsuario;

  private ActivityUserDataViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnBuscarUsuario, @NonNull Button btnVolverDash1,
      @NonNull EditText inputIdBuscar, @NonNull ConstraintLayout main,
      @NonNull TextView mostrarApellido, @NonNull TextView mostrarContrasena,
      @NonNull TextView mostrarCorreo, @NonNull TextView mostrarIdUsuario,
      @NonNull TextView mostrarNombreUsuario, @NonNull TextView mostrarTelefono,
      @NonNull TextView tagDatosUsuario) {
    this.rootView = rootView;
    this.btnBuscarUsuario = btnBuscarUsuario;
    this.btnVolverDash1 = btnVolverDash1;
    this.inputIdBuscar = inputIdBuscar;
    this.main = main;
    this.mostrarApellido = mostrarApellido;
    this.mostrarContrasena = mostrarContrasena;
    this.mostrarCorreo = mostrarCorreo;
    this.mostrarIdUsuario = mostrarIdUsuario;
    this.mostrarNombreUsuario = mostrarNombreUsuario;
    this.mostrarTelefono = mostrarTelefono;
    this.tagDatosUsuario = tagDatosUsuario;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserDataViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserDataViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_data_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserDataViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_buscar_usuario;
      Button btnBuscarUsuario = ViewBindings.findChildViewById(rootView, id);
      if (btnBuscarUsuario == null) {
        break missingId;
      }

      id = R.id.btn_volver_dash1;
      Button btnVolverDash1 = ViewBindings.findChildViewById(rootView, id);
      if (btnVolverDash1 == null) {
        break missingId;
      }

      id = R.id.input_id_buscar;
      EditText inputIdBuscar = ViewBindings.findChildViewById(rootView, id);
      if (inputIdBuscar == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.mostrar_apellido;
      TextView mostrarApellido = ViewBindings.findChildViewById(rootView, id);
      if (mostrarApellido == null) {
        break missingId;
      }

      id = R.id.mostrar_contrasena;
      TextView mostrarContrasena = ViewBindings.findChildViewById(rootView, id);
      if (mostrarContrasena == null) {
        break missingId;
      }

      id = R.id.mostrar_correo;
      TextView mostrarCorreo = ViewBindings.findChildViewById(rootView, id);
      if (mostrarCorreo == null) {
        break missingId;
      }

      id = R.id.mostrar_id_usuario;
      TextView mostrarIdUsuario = ViewBindings.findChildViewById(rootView, id);
      if (mostrarIdUsuario == null) {
        break missingId;
      }

      id = R.id.mostrar_nombre_usuario;
      TextView mostrarNombreUsuario = ViewBindings.findChildViewById(rootView, id);
      if (mostrarNombreUsuario == null) {
        break missingId;
      }

      id = R.id.mostrar_telefono;
      TextView mostrarTelefono = ViewBindings.findChildViewById(rootView, id);
      if (mostrarTelefono == null) {
        break missingId;
      }

      id = R.id.tag_datos_usuario;
      TextView tagDatosUsuario = ViewBindings.findChildViewById(rootView, id);
      if (tagDatosUsuario == null) {
        break missingId;
      }

      return new ActivityUserDataViewBinding((ConstraintLayout) rootView, btnBuscarUsuario,
          btnVolverDash1, inputIdBuscar, main, mostrarApellido, mostrarContrasena, mostrarCorreo,
          mostrarIdUsuario, mostrarNombreUsuario, mostrarTelefono, tagDatosUsuario);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
